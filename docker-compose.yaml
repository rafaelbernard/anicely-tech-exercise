services:
    app:
        build:
            context: .
        ports: [ '8000:8000' ]
        volumes:
            - .:/app
        depends_on:
            - mysql
        environment:
            DATABASE_HOST: mysql
            DATABASE_PORT: 3306
            DATABASE_NAME: employee_db
            DATABASE_USER: root
            DATABASE_PASSWORD: password

    mysql:
        image: mysql:9.4
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: employee_db
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
            - ./_build-deploy/database/init.sql:/docker-entrypoint-initdb.d/init.sql

# TODO: Here for illustraton purposes only.
# A proxy can be added as part of the compose file to make the application available on local domains.
# It can be enriched with additional features like SSL termination via mkcert
#  proxy:
#    image: jwilder/nginx-proxy:1.6-alpine
#    networks:
#      net:
#        aliases:
#          - app.local.asknicely.dev
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - ./certs:/etc/nginx/certs:ro
#      - ./_build-deploy/proxy/proxy.conf:/etc/nginx/proxy.conf:ro

volumes:
    mysql_data:

networks:
    net:
